fillcol  ="blue"
)
plot(w, fillcol  ="blue"
)
plot(w, wlines="tess", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  ="blue",border=NULL,showpoints = F
)
dat_r<-spsample(gc, 5,type="random", method="SpatialGrid")
all<-rbind(gc,dat_r)
plot(all)
vtess <- deldir(all$x,all$y)
w <- tile.list(vtess)
plot(w, wlines="tess", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  ="blue",border=NULL,showpoints = F
)
dat_r<-spsample(gc, 500,type="random", method="SpatialGrid")
all<-rbind(gc,dat_r)
plot(all)
vtess <- deldir(all$x,all$y)
w <- tile.list(vtess)
plot(w, wlines="tess", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  ="blue",border=NULL,showpoints = F
)
dat_r<-spsample(gc, 10000,type="random", method="SpatialGrid")
all<-rbind(gc,dat_r)
plot(all)
vtess <- deldir(all$x,all$y)
w <- tile.list(vtess)
plot(w, wlines="tess", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  ="blue",border=NULL,showpoints = F
)
dat_r<-spsample(gc, 10,type="random", method="SpatialGrid")
all<-rbind(gc,dat_r)
plot(all)
vtess <- deldir(all$x,all$y)
w <- tile.list(vtess)
plot(w, wlines="tess", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  ="blue",border=NULL,showpoints = F
)
gc
str(gc)
coordinates(gc) <- ~ c$x + c$y
str(gc)
dat_r<-spsample(gc, 10,type="random", method="SpatialGrid")
all<-rbind(gc,dat_r)
plot(all)
gc
gc[1,]
coordinates(gc) <- ~ x + y
gc<-data.frame(x=c$x,y=c$y)
gc<-na.omit(gc)
coordinates(gc) <- ~ x + y
gc
str(gc)
dat_r<-spsample(gc, 100,type="random", method="SpatialGrid")
all<-rbind(gc,dat_r)
plot(all)
dat_r<-spsample(gc, 100,type="random")
all<-rbind(gc,dat_r)
plot(all)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  ="blue",border=NULL,showpoints = F
)
w <- tile.list(vtess)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  ="blue",border=NULL,showpoints = F
)
data(meuse.riv)
meuse.riv
meuse.riv[1,]
gc.sr = SpatialPolygons(list(Polygons(list(Polygon(gc)), "x")))
gc.sr
dat_r<-spsample(gc.sr, 100,type="random")
all<-rbind(gc,dat_r)
plot(all)
dat_r<-spsample(gc.sr, 1000,type="random")
all<-rbind(gc,dat_r)
plot(all)
dat_r<-spsample(gc.sr, 5000,type="random")
all<-rbind(gc,dat_r)
plot(all)
dat_r<-spsample(gc.sr, 5000,type="Spatial")
all<-rbind(gc,dat_r)
plot(all)
dat_r<-spsample(gc.sr, 5000,type="stratified")
all<-rbind(gc,dat_r)
plot(all)
dat_r<-spsample(gc.sr, 5000,type="nonaligned")
all<-rbind(gc,dat_r)
plot(all)
dat_r<-spsample(gc.sr, 500,type="hexagonal")
all<-rbind(gc,dat_r)
plot(all)
dat_r<-spsample(gc.sr, 1000,type="hexagonal")
all<-rbind(gc,dat_r)
plot(all)
dat_r<-spsample(gc.sr, 10000,type="hexagonal")
all<-rbind(gc,dat_r)
plot(all)
list(Polygons(list(Polygon(gc)), "x"))
gc.sr = SpatialPolygons(list(Polygons(list(Polygon(gc)), "x")))
dat_r<-spsample(gc.sr, 1000,type="hexagonal")
all<-rbind(gc,dat_r)
plot(all)
vtess <- deldir(all$x,all$y)
w <- tile.list(vtess)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  ="blue",border=NULL,showpoints = F
)
gc.sr = SpatialPolygons(list(Polygons(list(Polygon(gc)), "x")))
dat_r<-spsample(gc.sr, 100,type="hexagonal")
all<-rbind(gc,dat_r)
plot(all)
vtess <- deldir(all$x,all$y)
w <- tile.list(vtess)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  ="blue",border=NULL,showpoints = F
)
gc.sr = SpatialPolygons(list(Polygons(list(Polygon(gc)), "x")))
dat_r<-spsample(gc.sr, 100,type="random")
all<-rbind(gc,dat_r)
plot(all)
vtess <- deldir(all$x,all$y)
w <- tile.list(vtess)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  ="blue",border=NULL,showpoints = F
)
dat_r<-spsample(gc.sr, 1000,type="random")
all<-rbind(gc,dat_r)
plot(all)
vtess <- deldir(all$x,all$y)
w <- tile.list(vtess)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  ="blue",border=NULL,showpoints = F
)
dat_r<-spsample(gc.sr, 1000,type="Fibonacci")
all<-rbind(gc,dat_r)
plot(all)
vtess <- deldir(all$x,all$y)
w <- tile.list(vtess)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  ="blue",border=NULL,showpoints = F
)
gc.sr = SpatialPolygons(list(Polygons(list(Polygon(gc)), "x")))
dat_r<-spsample(gc.sr, 1000,type="nonaligned")
all<-rbind(gc,dat_r)
plot(all)
vtess <- deldir(all$x,all$y)
w <- tile.list(vtess)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  ="blue",border=NULL,showpoints = F
)
mypal<-c("#009b3a", "#fedf00", "#002776", "white")
col=c()
for(i in 1:1000){
col[i] = mypal[i%%5+1]
}
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "#009b3a")
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "white")
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "white",cex=2)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "white",cex=1.25)
w <- tile.list(vtess)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "gray20",cex=1.25)
op = par(bg = "white", mar = rep(0.1, 4))
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "gray20",cex=1.25)
op = par(bg = "white", mar = rep(0.1, 4))
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "gray20",cex=1.25)
op = par(bg = "white", mar = rep(0.1, 4))
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "gray20",cex=1.25)
par(bg = "white", mar = rep(0.1, 4))
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "gray20",cex=1.25)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "gray20",cex=1.25)
plot(all)
par(bg = "white", mar = rep(0.1, 4))
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "gray20",cex=1.25)
par(bg = "white", mar = rep(0.1, 4))
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "gray20",cex=1.25)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
par(bg = "white", mar = rep(0.1, 4))
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "gray20",cex=1.25)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
plot(all)
par(bg = "white", mar = rep(0.1, 4))
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
par(bg = "white", mar = rep(0.1, 4))
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
plot(all)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
plot.new()
par(bg = "white", mar = rep(0.1, 4))
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
par(bg = "white", mar = rep(0.1, 4))
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
par(bg = "white", mar = rep(0.1, 4))
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
par(bg = "white", mar = rep(0.1, 4))
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
plot(all)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
par(mar=c(0.1,0.1,0.1,0.1))
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
plot()
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "gray20",cex=1.25)
plot(all)
vtess <- deldir(all$x,all$y)
w <- tile.list(vtess)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F
)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "gray20",cex=1.25)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F)
require(maps)
require(deldir)
library(mapproj)
mypal<-c("#009b3a", "#fedf00", "#002776", "white")
col=c()
for(i in 1:1000){
col[i] = mypal[i%%5+1]
}
require(sp)
c<-map("world", "Brazil")
gc<-data.frame(x=c$x,y=c$y)
gc<-na.omit(gc)
gc.sr = SpatialPolygons(list(Polygons(list(Polygon(gc)), "x")))
dat_r<-spsample(gc.sr, 1000,type="nonaligned")
all<-rbind(gc,dat_r)
dat_r
rbind(gc,dat_r)
gc
dat_r[,]
dat_r[]
dat_r
as.data.frame(dat_r)
all<-rbind(gc,as.data.frame(dat_r))
plot(all)
gc[1,]
as.data.frame(dat_r)[1,]
colnames(as.data.frame(dat_r))<-c("x","y")
all<-rbind(gc,dat_r)
plot(all)
dat_r
dat_r[1,]
colnames(as.data.frame(dat_r))<-c("x","y")
as.data.frame(dat_r)
dat_r<-as.data.frame(dat_r)
colnames(dat_r)<-c("x","y")
all<-rbind(gc,dat_r)
plot(all)
vtess <- deldir(all$x,all$y)
w <- tile.list(vtess)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "gray20",cex=1.25)
par(mar=c(0.1,0.1,0.1,0.1))
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "gray20",cex=1.25)
op = par(bg = "gray95", mar = rep(0.1, 4))
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "gray20",cex=1.25)
op = par(bg = "gray95", mar = rep(0.1, 4))
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "gray20",cex=1.25)
op = par(bg = "gray95", mar = rep(0.1, 4))
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "gray20",cex=1.25)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "gray20",cex=1.25)
plot(all)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "gray20",cex=1.25)
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "gray20",cex=1.25)
poly.image( c$x, c$y, rnorm(593,1,10))
plot(w, wlines="triang", wpoints="none", number=FALSE, add=TRUE, lty=1,
fillcol  =col,border=NULL,showpoints = F)
# signature
legend("topleft", legend = "© Rafael S. de Souza", bty = "n", text.col = "gray20",cex=1.25)
420*4
180*4
gc
install.packages('digitize')
library(digitize)
cal = ReadAndCal('/Users/rafael/Downloads/mem.jpg')
data.points = DigitData(col = 'red')
cal = ReadAndCal('/Users/rafael/Downloads/mem.jpg')
data.points = DigitData(col = 'red')
library(digitize)
cal = ReadAndCal('/Users/rafael/Downloads/mem.jpg')
data.points = DigitData(col = 'red')
xx <- seq(0,50,length=500)
df <- do.call(cbind,lapply(1:40,
function(i){
sin(rpois(1,5)*xx+1)+1
}
))
df[1,] <- 0
df[nrow(df),] <- 0
op = par(bg = "white", mar = rep(0.1, 4))
plot(x=xx, y=rep(40,length(xx)), ylim=c(0,45), type="n", ylab="")
for(i in 40:1){
offset <- 1.1*i
polygon(x=xx, y=offset+df[,i], col=col[i], border="black",alpha=0.7)
}
(1/5)^2
(1/5)^
(1/5)^3
library(GGally)
library(ggnet)
library(network)
library(sna)
library(ggplot2)
require(made4)
M<-matrix(data=c(1,0.5,0,1,0,0,0.5,0,
1,0,0,1,0,0,1,1,
0.5,1,1,1,1,1,1,1,
0.5,1,1,0.5,1,1,1,1,
1,1,0,1,0,0,0,1,
0.5,0,0,1,0,0,0,0,
1,1,1,1,1,0.5,1,1,
0.5,0,0,0,1,0,0,0,
0.5,1,1,1,1,1,0,1,
1,1,1,1,1,1,1,0),ncol=8,nrow=10,byrow = T)
colnames(M)<-c("Bolsonaro","Crivella","Freixo","Índio","Jandira","Molon","Osorio",
"Pedro Paulo")
rownames(M)<-c("Escola sem partido","Guarda armada","Mototáxis","Transporte alternativo",
"OSs na saúde","Remoção de favelas","Apoio ao carnaval","Subsídio ao ônibus",
"Aporte ao metrô","Uber")
M2<-t(M)
png(filename='test.png', width=800, height=600)
heatplot(M2, scale="none",dend="row",dualScale=F,zlim
=c(0,1),margins=c(12,8))
par(mar=c(0,2,2,4)+0.1)
chordDiagram(M2,link.border = 1,directional = 1,
annotationTrack = "grid", preAllocateTracks = 1)
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim), ylim[1] + .1, sector.name, facing = "clockwise", niceFacing = TRUE, adj = c(0, 0.5))
circos.axis(h = "top", labels.cex = 0.5, major.tick.percentage = 0.2, sector.index = sector.name, track.index = 2)
}, bg.border = NA)
require(circlize)
chordDiagram(M2,link.border = 1,directional = 1,
annotationTrack = "grid", preAllocateTracks = 1)
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim), ylim[1] + .1, sector.name, facing = "clockwise", niceFacing = TRUE, adj = c(0, 0.5))
circos.axis(h = "top", labels.cex = 0.5, major.tick.percentage = 0.2, sector.index = sector.name, track.index = 2)
}, bg.border = NA)
chordDiagram(M2,link.border = 1,directional = 1,
annotationTrack = "grid", preAllocateTracks = 1)
chordDiagram(M2)
par(mar=c(0,2,2,4)+0.1)
chordDiagram(M2,link.border = 1,directional = 1,
annotationTrack = "grid", preAllocateTracks = 1)
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim), ylim[1] + .1, sector.name, facing = "clockwise", niceFacing = TRUE, adj = c(0, 0.5))
circos.axis(h = "top", labels.cex = 0.5, major.tick.percentage = 0.2, sector.index = sector.name, track.index = 2)
}, bg.border = NA)
quartz.save(type = 'pdf', file = 'Rio_pref.pdf',width = 12, height = 10)
pdf("chord_rio.pdf")
par(mar=c(0,2,2,4)+0.1)
chordDiagram(M2,link.border = 1,directional = 1,
annotationTrack = "grid", preAllocateTracks = 1)
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim), ylim[1] + .1, sector.name, facing = "clockwise", niceFacing = TRUE, adj = c(0, 0.5))
circos.axis(h = "top", labels.cex = 0.5, major.tick.percentage = 0.2, sector.index = sector.name, track.index = 2)
}, bg.border = NA)
dev.off()
setwd("~/Dropbox/artigos/Meusartigos/IAA-WGC/Github/arte_R")
pdf("chord_rio.pdf")
par(mar=c(0,2,2,4)+0.1)
chordDiagram(M2,link.border = 1,directional = 1,
annotationTrack = "grid", preAllocateTracks = 1)
circos.trackPlotRegion(track.index = 1, panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
sector.name = get.cell.meta.data("sector.index")
circos.text(mean(xlim), ylim[1] + .1, sector.name, facing = "clockwise", niceFacing = TRUE, adj = c(0, 0.5))
circos.axis(h = "top", labels.cex = 0.5, major.tick.percentage = 0.2, sector.index = sector.name, track.index = 2)
}, bg.border = NA)
dev.off()
